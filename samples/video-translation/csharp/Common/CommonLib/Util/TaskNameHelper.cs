//
// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.
//

namespace Microsoft.SpeechServices.CommonLib.Util;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public static class TaskNameHelper
{
    public const int NameMaxCharLength = 256;
    public const string IncompleteFileNamePrefix = "...";

    public static string BuildAutoGeneratedFileName(IEnumerable<string> fileNames)
    {
        ArgumentNullException.ThrowIfNull(fileNames);

        var fileName = string.Empty;
        if (!fileNames.Any())
        {
            fileName = "No file selected.";
        }
        else if (fileNames.Count() == 1)
        {
            fileName = $"{fileNames.First()}";
        }
        else
        {
            fileName = TrimFileNameToDisplayText(
                $"{fileNames.Count()} files: {string.Join(",", fileNames)}",
                NameMaxCharLength);
        }

        return fileName;
    }

    public static string TrimFileNameToDisplayText(string fullFileName, int maxFileNameCharCount)
    {
        if (string.IsNullOrEmpty(fullFileName))
        {
            return fullFileName;
        }

        var sb = new StringBuilder();
        if (fullFileName.Length > maxFileNameCharCount && fullFileName.Length > IncompleteFileNamePrefix.Length)
        {
            sb.Append(fullFileName.Substring(fullFileName.Length - IncompleteFileNamePrefix.Length));
            sb.Append(IncompleteFileNamePrefix);
        }
        else
        {
            sb.Append(fullFileName);
        }

        return sb.ToString();
    }
}
